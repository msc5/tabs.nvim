local str = require('tabs.str')

describe('str utilities', function()
    describe('default', function()
        it('should return default value when input is nil', function()
            assert.equals('default', str.default(nil, 'default'))
            assert.equals(42, str.default(nil, 42))
            assert.equals(false, str.default(nil, false))
        end)

        it('should return input value when not nil', function()
            assert.equals('custom', str.default('custom', 'default'))
            assert.equals(100, str.default(100, 42))
            assert.equals(true, str.default(true, false))
        end)
    end)

    describe('justify', function()
        it('should center justify text by default', function()
            local result = str.justify('hello', { width = 10 })
            assert.equals('  hello   ', result)
        end)

        it('should left justify text', function()
            local result = str.justify('hello', { width = 10, align = 'left' })
            assert.equals('hello     ', result)
        end)

        it('should right justify text', function()
            local result = str.justify('hello', { width = 10, align = 'right' })
            assert.equals('     hello', result)
        end)

        it('should handle odd width correctly', function()
            local result = str.justify('hi', { width = 7, align = 'center' })
            assert.equals('  hi   ', result)
        end)

        it('should handle even width correctly', function()
            local result = str.justify('hi', { width = 8, align = 'center' })
            assert.equals('   hi   ', result)
        end)

        it('should use default width of 80', function()
            local result = str.justify('test')
            assert.equals(80, #result)
            assert.is_true(string.match(result, '^%s+test%s+$'))
        end)

        it('should error when text is wider than width', function()
            assert.has_error(function()
                str.justify('very long text', { width = 5 })
            end)
        end)

        it('should error with invalid align option', function()
            assert.has_error(function()
                str.justify('test', { align = 'invalid' })
            end)
        end)
    end)
end) 